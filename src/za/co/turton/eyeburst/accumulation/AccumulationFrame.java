/*
 * AccumulationFrame.java
 *
 * Created on August 1, 2006, 12:58 PM
 */

package za.co.turton.eyeburst.accumulation;

import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import za.co.turton.eyeburst.*;

/**
 *
 * @author  james
 */
public class AccumulationFrame extends javax.swing.JFrame {
    
    private Map<String, AccumulationCategory> categories;
    
    private TowerPublisher towerPublisher;
    
    private TowerSampleDataSet tsds;
    
    private ChartCanvas chartCanvas;
    
    private int sampleSize;
    
    /** Creates new form AccumulationFrame */
    public AccumulationFrame(TowerPublisher towerPublisher, int sampleSize) {
        initComponents();
        this.setTitle(this.getTitle()+" (Sample Size = "+sampleSize+")");
        chartPanel.setTransferHandler(new TowerTransferHandler());
        this.chartCanvas = new ChartCanvas();
        chartPanel.add(chartCanvas);
        this.categories = new LinkedHashMap<String, AccumulationCategory>();
        this.sampleSize = sampleSize;
        this.towerPublisher = towerPublisher;
    }
    
    public boolean addTower(String towerCode) {
        
        String setupName = JOptionPane.showInputDialog(this, "Sample Name");
        Tower tower = towerPublisher.createTower(towerCode);
        AccumulationCategory setup = getOrCreateSetup(setupName);
        setup.add(tower);
        
        JLabel label = new JLabel(tower.getName()+": "+setupName);
        label.setVisible(true);
        pendingsPanel.add(label);
        pack();
        
        return true;
    }
    
    private AccumulationCategory getOrCreateSetup(String setupName) {
        AccumulationCategory category = categories.get(setupName);
        
        if (category == null) {
            category = new AccumulationCategory(setupName, sampleSize);
            categories.put(setupName, category);
            towerPublisher.addListener(category);
            category.addListener(chartCanvas);
        }
        
        return category;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        chartPanel = new javax.swing.JPanel();
        pendingsPanel = new javax.swing.JPanel();

        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Accumulated Signal Datasets");
        chartPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                chartPanelComponentResized(evt);
            }
        });

        org.jdesktop.layout.GroupLayout chartPanelLayout = new org.jdesktop.layout.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 491, Short.MAX_VALUE)
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 220, Short.MAX_VALUE)
        );
        getContentPane().add(chartPanel);

        pendingsPanel.setPreferredSize(new java.awt.Dimension(292, 80));
        getContentPane().add(pendingsPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void chartPanelComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_chartPanelComponentResized
        chartCanvas.setSize(chartPanel.getSize());
        chartCanvas.repaint();
    }//GEN-LAST:event_chartPanelComponentResized
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartPanel;
    private javax.swing.JPanel pendingsPanel;
    // End of variables declaration//GEN-END:variables
    
}
